{"version":3,"file":"static/js/160.45563bc4.chunk.js","mappings":"6SACaA,EAAcC,EAAAA,GAAAA,GAAH,iYAIR,SAAAC,GAAC,gBAAOA,EAAEC,MAAMC,MAAM,GAArB,SACJ,SAAAF,GAAC,gBAAOA,EAAEC,MAAMC,MAAM,GAArB,SACQ,SAAAF,GAAC,OAAIA,EAAEC,MAAME,OAAOC,WAElB,SAAAJ,GAAC,OAAIA,EAAEC,MAAME,OAAOE,UAC/B,SAAAL,GAAC,OAAIA,EAAEC,MAAME,OAAOG,SAEd,SAAAN,GAAC,OAAIA,EAAEC,MAAMM,MAAMC,SAC3B,SAAAR,GAAC,OAAIA,EAAEC,MAAME,OAAOM,QAChB,SAAAT,GAAC,OAAIA,EAAEC,MAAMS,UAAUC,KACtB,SAAAX,GAAC,OAAIA,EAAEC,MAAMW,QAAQC,WAOxBC,EAAaf,EAAAA,GAAAA,OAAH,0OACV,SAAAC,GAAC,gBAAOA,EAAEC,MAAMC,MAAM,GAArB,SACQ,SAAAF,GAAC,OAAIA,EAAEC,MAAME,OAAOC,WAC9B,SAAAJ,GAAC,OAAIA,EAAEC,MAAMc,QAAQC,UACd,SAAAhB,GAAC,OAAIA,EAAEC,MAAMM,MAAMC,SAC3B,SAAAR,GAAC,OAAIA,EAAEC,MAAME,OAAOM,QAChB,SAAAT,GAAC,OAAIA,EAAEC,MAAMS,UAAUC,KAEd,SAAAX,GAAC,OAAIA,EAAEC,MAAME,OAAOc,OAC/B,SAAAjB,GAAC,OAAIA,EAAEC,MAAME,OAAOG,S,UC1BpBY,EAAkB,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,GAAIC,EAAmB,EAAnBA,KAAMC,EAAa,EAAbA,OAC1C,GACEC,EAAAA,EAAAA,MADF,eAAOC,EAAP,gBAAwBC,MAAAA,OAAxB,SAAuCC,EAAvC,EAAuCA,UAEvC,OACE,UAAC3B,EAAD,YACE,uBAAIsB,KACJ,uBAAIC,KACJ,SAACP,EAAD,CACEK,GAAIA,EACJO,QAAS,WACPH,EAAcJ,IAEhBQ,SAAUF,EALZ,oBASCD,GACCI,IAAAA,OAAAA,QAAA,+CAEEC,EAAAA,OCcV,EA9BiB,WACf,IAIqBC,EAAKC,EAJtBC,GAASC,EAAAA,EAAAA,IAAYC,EAAAA,IAEXC,GAAaC,EAAAA,EAAAA,MAAnBC,KAYR,OACE,iCACE,SAACC,EAAA,EAAD,CAAKC,GAAG,KAAKC,GAAI,EAAGC,MAAM,OAA1B,UAZiBX,EAaFK,EAbOJ,EAaGC,OAZfU,IAARZ,GAAoC,IAAfA,EAAIa,OACpB,GAEMb,EAAIE,QACjB,SAAAY,GAAE,OAA4D,IAAxDA,EAAGxB,KAAKyB,cAAcC,QAAQf,EAAMc,mBAQTE,KAAI,YAA2B,IAAxB5B,EAAuB,EAAvBA,GAAIC,EAAmB,EAAnBA,KAAMC,EAAa,EAAbA,OAC9C,OACE,SAACH,EAAD,CAA0BC,GAAIA,EAAIC,KAAMA,EAAMC,OAAQA,GAAhCF,SAI5B,SAAC,EAAA6B,SAAD,CAAUC,SAAU,KAApB,UACE,SAAC,KAAD","sources":["components/Contacts/Contacts.styled.js","components/Contacts/ContactsItem.jsx","components/Contacts/Contacts.jsx"],"sourcesContent":["import styled from 'styled-components';\nexport const ContactItem = styled.li`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-top: ${p => `${p.theme.space[4]}px`};\n  padding: ${p => `${p.theme.space[3]}px`};\n  background-color: ${p => p.theme.colors.primary};\n  :hover {\n    background-color: ${p => p.theme.colors.accent};\n    color: ${p => p.theme.colors.white};\n  }\n  border-radius: ${p => p.theme.radii.large};\n  color: ${p => p.theme.colors.text};\n  font-size: ${p => p.theme.fontSizes.m};\n  box-shadow: ${p => p.theme.shadows.darkBox};\n  & p {\n    margin-bottom: 0;\n    font-size: 20px;\n    font-weight: 500;\n  }\n`;\nexport const ContactBtn = styled.button`\n  padding: ${p => `${p.theme.space[2]}px`};\n  background-color: ${p => p.theme.colors.primary};\n  border: ${p => p.theme.borders.normal};\n  border-radius: ${p => p.theme.radii.large};\n  color: ${p => p.theme.colors.text};\n  font-size: ${p => p.theme.fontSizes.m};\n  :hover {\n    background-color: ${p => p.theme.colors.red};\n    color: ${p => p.theme.colors.white};\n    border-color: transparent;\n  }\n`;\n","import Notiflix from 'notiflix';\nimport { notiflixOptions } from 'redux/auth/authOperations';\nimport { useRemoveContactMutation } from 'redux/contactsSlice';\nimport { ContactItem, ContactBtn } from '../Contacts/Contacts.styled';\n\nexport const ContactListItem = ({ id, name, number }) => {\n  const [removeContact, { error = false, isLoading }] =\n    useRemoveContactMutation();\n  return (\n    <ContactItem>\n      <p>{name}</p>\n      <p>{number}</p>\n      <ContactBtn\n        id={id}\n        onClick={() => {\n          removeContact(id);\n        }}\n        disabled={isLoading}\n      >\n        Delete\n      </ContactBtn>\n      {error &&\n        Notiflix.Notify.failure(\n          `Contact not found, refresh page or try later`,\n          notiflixOptions\n        )}\n    </ContactItem>\n  );\n};\n","import { Suspense } from 'react';\nimport { useSelector } from 'react-redux';\nimport { Outlet } from 'react-router-dom';\nimport { getFilter } from 'redux/contactsSlice';\nimport { useGetContactsQuery } from 'redux/contactsSlice';\nimport { Box } from '../Box';\nimport { ContactListItem } from './ContactsItem';\n\nconst Contacts = () => {\n  let filter = useSelector(getFilter);\n\n  const { data: contacts } = useGetContactsQuery();\n\n  const filterItems = (arr, query) => {\n    if (arr === undefined || arr.length === 0) {\n      return [];\n    }\n    let newArray = arr.filter(\n      el => el.name.toLowerCase().indexOf(query.toLowerCase()) !== -1\n    );\n    return newArray;\n  };\n\n  return (\n    <>\n      <Box as=\"ul\" mt={4} width=\"100%\">\n        {filterItems(contacts, filter).map(({ id, name, number }) => {\n          return (\n            <ContactListItem key={id} id={id} name={name} number={number} />\n          );\n        })}\n      </Box>\n      <Suspense fallback={null}>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n};\nexport default Contacts;\n"],"names":["ContactItem","styled","p","theme","space","colors","primary","accent","white","radii","large","text","fontSizes","m","shadows","darkBox","ContactBtn","borders","normal","red","ContactListItem","id","name","number","useRemoveContactMutation","removeContact","error","isLoading","onClick","disabled","Notiflix","notiflixOptions","arr","query","filter","useSelector","getFilter","contacts","useGetContactsQuery","data","Box","as","mt","width","undefined","length","el","toLowerCase","indexOf","map","Suspense","fallback"],"sourceRoot":""}